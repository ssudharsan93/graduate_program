Sudharsan Sundaravenkataraman
University of Texas at Dallas
Professor Yen
CS 5348.501
UTD ID: 2021668140

DISCLAIMER:

Running `make clean; make` will allow this directory to clean prior printer.out files.
It will build the Server program `printer.exe` and the Client program `computer.exe`.
Care should be taken to provide the proper ip-address corresponding to the machine that
the Server program is run on. If you are running both the server program and client program
on the same machine, localhost i.e. 127.0.0.1 can be used for the ip-address. A port number
corresponding to my student id is used in the `config.sys` file that is provided in this directory.
The user that attempts to run this program should use their own port number.

The order in the config.sys file is as follows, with each parameter comma-separated,
IP_ADDRESS,PORT_NUMBER,M,TQ,PT,NC,CQS,MQS.

The server program, `printer.exe` runs to completion, then upon issuing a CTRL-C command, which is
necessary to kill the program, then upon tearing down the program results in segmentation fault. 

You can run this script simply by running `./computer.exe YOUR_COMPUTER_ID`
or by piping in input from comp.in by running `./computer.exe YOUR_COMPUTER_ID < comp.in`.
A sample 'comp.in' file is provided for your convenience and some additional
test scripts named 'add', 'mul', and 'prog1'. These program files do very simple
operations, like multiplying a value repeatedly or adding a value repeatedly, or
sleeping. 'prog-idle' is also provided in this directory. This is a sample
idle program personally created. The 'prog-idle' program file can be replaced
with another idle program file provided it is named 'prog-idle'. 

Concurrency control was implemented, so this program should run to completion.

Additionally, WARNING: 

Also, Assuming that memory management was not expected for this project, if you 
provide a base value of 0, the idle program will be overwritten. Therefore,
it is required for this executable, that base values greater than 15 are provided,
since the length of the idle program written for this project has a length of 15 words.

If a personal/custom 'prog-idle' program is used, care should be taken to provide base
values for submitted programs such that it doesn't overlap or overwrite the idle
program. The idle program will be loaded starting at array index 0 for the memory variable
and populated until the end of the idle program. 

